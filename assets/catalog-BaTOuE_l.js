async function d(o,s){const a=await fetch(o,{signal:s,headers:{Accept:"application/json"}});if(!a.ok){const t=await a.text().catch(()=>"");throw new Error(`GET ${o} -> ${a.status} ${a.statusText}${t?`: ${t}`:""}`)}return a.json()}const u=o=>d("/api/albums",o);async function l(o,s,a){const t=`/api/albums/${encodeURIComponent(o)}`,n=await fetch(t,{method:"PATCH",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(s),signal:a});if(!n.ok){const e=await n.text().catch(()=>"");throw new Error(`PATCH ${t} -> ${n.status}${e?`: ${e}`:""}`)}return await n.json()}async function m(o){const s="/api/albums",a=await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(o)});if(!a.ok){const t=await a.text().catch(()=>"");throw new Error(`POST ${s} -> ${a.status}${t?`: ${t}`:""}`)}return await a.json()}async function p(o){const s=`/api/albums/${encodeURIComponent(o)}`,a=await fetch(s,{method:"DELETE",headers:{Accept:"application/json"}});if(!a.ok){const t=await a.text().catch(()=>"");throw new Error(`DELETE ${s} -> ${a.status}${t?`: ${t}`:""}`)}return await a.json()}const h=o=>d("/api/tags",o);function f(o,s,a,t={}){let n=a.albumId?.trim()||"";if(!n&&a.name&&(n=o.find(c=>c.name.localeCompare(a.name,void 0,{sensitivity:"accent"})===0)?.albumId||""),!n)return[];let e=s.filter(i=>i.albumId===n);const r=(i,c)=>i.year-c.year||i.month-c.month||i.day-c.day;return t.sort==="date-asc"&&(e=[...e].sort(r)),t.sort==="date-desc"&&(e=[...e].sort((i,c)=>-r(i,c))),t.limit&&t.limit>0&&(e=e.slice(0,t.limit)),e}function w(o,s,a,t={}){let n=String(a.tagId).trim();if(!n&&a.name&&(n=o.find(c=>c.name.localeCompare(a.name,void 0,{sensitivity:"accent"})===0)?.tagId??""),!n)return[];let e=s.filter(i=>i.tagId===n);const r=(i,c)=>i.year-c.year||i.month-c.month||i.day-c.day;return t.sort==="date-asc"&&(e=[...e].sort(r)),t.sort==="date-desc"&&(e=[...e].sort((i,c)=>-r(i,c))),t.limit&&t.limit>0&&(e=e.slice(0,t.limit)),e}async function $(o,s,a){const t=`/api/photos/${encodeURIComponent(o)}`,n=await fetch(t,{method:"PATCH",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(s),signal:a});if(!n.ok){const e=await n.text().catch(()=>"");throw new Error(`PATCH ${t} -> ${n.status}${e?`: ${e}`:""}`)}return await n.json()}async function y(o,s){const a=`/api/photos/${encodeURIComponent(o)}`,t=await fetch(a,{method:"DELETE",headers:{Accept:"application/json"},signal:s});if(!t.ok){const n=await t.text().catch(()=>"");throw new Error(`DELETE ${a} -> ${t.status}${n?`: ${n}`:""}`)}return await t.json()}export{w as a,h as b,m as c,p as d,$ as e,y as f,u as g,f as p,l as u};
